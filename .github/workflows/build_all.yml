name: Build Binaries

on:
    push:
        branches-ignore:
        - nightly
    pull_request:
        branches-ignore:
        - nightly

env:
    # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
    BUILD_TYPE: Release
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    build_macos:
        runs-on: macOS

        steps:
        - uses: actions/checkout@v3
        
        - name: Create Build Environment
          run: cmake -E make_directory ${{runner.workspace}}/build

        - name: Prepare CMake
          working-directory: ${{runner.workspace}}/build
          run: cmake $GITHUB_WORKSPACE -DOPT_BUILD_PLUTOSDR_SOURCE=ON -DOPT_BUILD_SOAPY_SOURCE=OFF -DOPT_BUILD_BLADERF_SOURCE=ON -DOPT_BUILD_SDRPLAY_SOURCE=ON -DOPT_BUILD_LIMESDR_SOURCE=ON -DOPT_BUILD_AUDIO_SINK=OFF -DOPT_BUILD_PORTAUDIO_SINK=ON -DOPT_BUILD_NEW_PORTAUDIO_SINK=ON -DOPT_BUILD_M17_DECODER=ON -DOPT_BUILD_AUDIO_SOURCE=OFF -DUSE_BUNDLE_DEFAULTS=ON -DCMAKE_BUILD_TYPE=Release

        - name: Build
          working-directory: ${{runner.workspace}}/build
          run: make VERBOSE=1 -j1

        - name: Create Archive
          working-directory: ${{runner.workspace}}
          run: cd $GITHUB_WORKSPACE && sh make_macos_bundle.sh ${{runner.workspace}}/build ./SDR++.app && zip -r ${{runner.workspace}}/sdrpp_macos_arm64.zip SDR++.app

        - name: Save Archive
          uses: actions/upload-artifact@v3
          with:
              name: sdrpp_macos_arm64
              path: ${{runner.workspace}}/sdrpp_macos_arm64.zip
  
    # build_ubuntu_bionic:
    #     runs-on: ubuntu-latest

    #     steps:
    #     - uses: actions/checkout@v3
        
    #     - name: Create Docker Image
    #       run: cd $GITHUB_WORKSPACE/docker_builds/ubuntu_bionic && docker build . --tag sdrpp_build

    #     - name: Run Container
    #       run: docker run --name build -v $GITHUB_WORKSPACE:/root/SDRPlusPlus --env BUILD_NO="-$GITHUB_RUN_NUMBER" sdrpp_build /root/do_build.sh

    #     - name: Recover Deb Archive
    #       working-directory: ${{runner.workspace}}
    #       run: docker cp build:/root/SDRPlusPlus/sdrpp_debian_amd64.deb ./

    #     - name: Save Deb Archive
    #       uses: actions/upload-artifact@v3
    #       with:
    #           name: sdrpp_ubuntu_bionic_amd64
    #           path: ${{runner.workspace}}/sdrpp_debian_amd64.deb


    create_full_archive:
        needs: ['build_macos']
        runs-on: ubuntu-latest

        steps:
        - name: Download All Builds
          uses: actions/download-artifact@v3

        - name: Create Archive
          run: >
            mkdir sdrpp_all && 
            mv sdrpp_macos_arm64/sdrpp_macos_arm64.zip sdrpp_all/

        - uses: actions/upload-artifact@v3
          with:
            name: sdrpp_all
            path: sdrpp_all/

    update_nightly_release:
        needs: [create_full_archive]
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

        steps:
        - name: Download All Builds
          uses: actions/download-artifact@v3

        - name: Update Nightly
          run: gh release upload nightly sdrpp_all/* -R ${{github.repository}} --clobber

    check_spelling:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3

        - name: Install codespell
          run: sudo apt update -y && sudo apt install -y codespell
        
        - name: Running codespell
          run: cd $GITHUB_WORKSPACE && codespell -q 2 || true

    check_formatting:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        
        - name: Run check_clang_format
          run: cd $GITHUB_WORKSPACE && chmod +x ./check_clang_format.sh && ./check_clang_format.sh || true
